@page
@model KoiCareSystem.RazorWebApp.Pages.Member.WaterParameters.DetailModel

@{
    ViewData["Title"] = "Detail";
}

<h1>@Model.PondName</h1>
<style>
    .btn-load {
        background-color: blue;
        color: white; 
    }

    .btn-history {
        background-color: white; 
        color: blue; 
        border: 1px solid blue; 
    }

    
    .btn a {
        color: inherit;
        text-decoration: none; 
    }

    .btn-history a:hover {
    }
</style>
<div>
    <h4>WaterParameter</h4>
    <button class="btn btn-primary btn-load">
        <a asp-page="./Create" asp-route-id="@Model.PondId"> Load</a>
    </button>
    |||
    <button class="btn btn-history">
        <a asp-page="/Member/WaterParameters/History" asp-route-id="@Model.PondId">History</a>
    </button>

    <hr />

    <table class="table table-bordered centered">
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Value</th>
                <th>Evaluation</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@Html.DisplayNameFor(model => model.WaterParameter.MeasurementDate)</td>
                <td>@Html.DisplayFor(model => model.WaterParameter.MeasurementDate)</td>
                <td></td>
            </tr>
            <tr>
                <td>@Html.DisplayNameFor(model => model.WaterParameter.WaterVolume)</td>
                <td>@Html.DisplayFor(model => model.WaterParameter.WaterVolume) L</td>
                <td></td>
            </tr>
            <tr class="@GetEvaluationClass(Model.Evaluations,"Temperature")">
                <td>@Html.DisplayNameFor(model => model.WaterParameter.Temperature)</td>
                <td>@Html.DisplayFor(model => model.WaterParameter.Temperature) °C</td>
                <td>@(Model.Evaluations.ContainsKey("Temperature") ? Model.Evaluations["Temperature"] : "N/A")</td>
            </tr>
            <tr class="@GetEvaluationClass(Model.Evaluations,"Salinity")">
                <td>@Html.DisplayNameFor(model => model.WaterParameter.Salinity)</td>
                <td>@Html.DisplayFor(model => model.WaterParameter.Salinity) mg/L</td>
                <td>@(Model.Evaluations.ContainsKey("Salinity") ? Model.Evaluations["Salinity"] : "N/A")</td>
            </tr>
            <tr class="@GetEvaluationClass(Model.Evaluations,"PH")">
                <td>@Html.DisplayNameFor(model => model.WaterParameter.Ph)</td>
                <td>@Html.DisplayFor(model => model.WaterParameter.Ph) mg/L</td>
                <td>@(Model.Evaluations.ContainsKey("PH") ? Model.Evaluations["PH"] : "N/A")</td>
            </tr>
            <tr class="@GetEvaluationClass(Model.Evaluations,"O2")">
                <td>@Html.DisplayNameFor(model => model.WaterParameter.O2)</td>
                <td>@Html.DisplayFor(model => model.WaterParameter.O2) mg/L</td>
                <td>@(Model.Evaluations.ContainsKey("O2") ? Model.Evaluations["O2"] : "N/A")</td>
            </tr>
            <tr class="@GetEvaluationClass(Model.Evaluations,"NO2")">
                <td>@Html.DisplayNameFor(model => model.WaterParameter.No2)</td>
                <td>@Html.DisplayFor(model => model.WaterParameter.No2) mg/L</td>
                <td>@(Model.Evaluations.ContainsKey("NO2") ? Model.Evaluations["NO2"] : "N/A")</td>
            </tr>
            <tr class="@GetEvaluationClass(Model.Evaluations,"NO3")">
                <td>@Html.DisplayNameFor(model => model.WaterParameter.No3)</td>
                <td>@Html.DisplayFor(model => model.WaterParameter.No3) mg/L</td>
                <td>@(Model.Evaluations.ContainsKey("NO3") ? Model.Evaluations["NO3"] : "N/A")</td>
            </tr>
            <tr class="@GetEvaluationClass(Model.Evaluations,"PO4")">
                <td>@Html.DisplayNameFor(model => model.WaterParameter.Po4)</td>
                <td>@Html.DisplayFor(model => model.WaterParameter.Po4) mg/L</td>
                <td>@(Model.Evaluations.ContainsKey("PO4") ? Model.Evaluations["PO4"] : "N/A")</td>
            </tr>
            <tr class="@GetStatusClass(Model.Status)">
                <td>@Html.DisplayNameFor(model => model.Status)</td>
                <td style="font-weight: bold; font-size: larger;">@Html.DisplayFor(model => model.Status)</td>
            </tr>
        </tbody>
    </table>
</div>

<div>
    <a asp-page="/Member/PondPages/Index">Back to List</a>
</div>

@functions {
    public string GetEvaluationClass(Dictionary<string, string> evaluations, string key)
    {
        if (evaluations != null && evaluations.ContainsKey(key))
        {
            var evaluation = evaluations[key].ToLower();
            if (evaluation == "good")
            {
                return "good-range"; // Màu xanh cho within
            }
            else if (evaluation == "within acceptable range")
            {
                return "accept-range"; // Màu xanh cho within
            }
            else
            {
                return "out-of-range"; // Màu đỏ cho below hoặc above
            }
        }
        return string.Empty;
    }

    public string GetStatusClass(string statusName)
    {
        if (string.IsNullOrEmpty(statusName))
            return string.Empty; // Trả về chuỗi rỗng nếu statusName không hợp lệ

        switch (statusName.ToLower())
        {
            case "good":
                return "good-range"; // Màu xanh
            case "average":
                return "accept-range"; // Màu vàng
            case "bad":
                return "out-of-range"; // Màu đỏ
            default:
                return string.Empty; // Trả về chuỗi rỗng nếu không có trạng thái phù hợp
        }
    }
}

